Operator::::::::::::

Operator are those which are used to perform an operation using operands.

there are some type of operators that are used to perform operations on variables and values.

1. Arithmetic operators
2. Relational opertors or comparison operators
3. Logical Oerators
4. Bitwise opertor
5. assignment Operator
6. special operator



Python Arithmetic Operators-
.............................................
Arithmetic operators are used with numeric values to perform common mathematical operations:

Operator	Name	Example	Try it
+	Addition	x + y	
-	Subtraction	x - y	
*	Multiplication	x * y	
/	Division	x / y	
%	Modulus	x % y	
**	Exponentiation	x ** y	 
//	Floor division	x // y


a=100
b=20
print("a+b", a+b)
print("a-b", a-b)
print("a*b", a*b)
print("a/b", a/b)
print("a%b", a%b)
print("a**b", a**b)
print("a//b",a//b)




............................................

+ operator applicable for the str type also which is used for conctenation operator.

'abc'*3    #error
'abc'+'def'


................................................


Python Comparison Operators
Comparison operators are used to compare two values:

Operator	Name	Example	Try it
==	Equal	x == y	
!=	Not equal	x != y	
>	Greater than	x > y	
<	Less than	x < y	
>=      Greater than or equal to	x>= y	
<=	Less than or equal to	x <= y	


a=10
b=20
print("a>b", a>b)
print("a<b", a<b)
print("a>=b", a>=b)
print("a<=b", a<=b)
print("a==b", a==b)


if we are taking string insted of number,,then what will happen...??

a='shweta'
b='Chw'
print("a>b", a>b)
print("a<b", a<b)
print("a>=b", a>=b)
print("a<=b", a<=b)
print("a==b", a==b)

it will compare based on the ascaii value or alphabatical order.

A-Z=65-90 //uppercase alphabates are small aplahabates

a-z=97-112  //smallcase alphabates are bigger than captital words.

now if we are taking boolean numbers instead of string and number.
then what will be happen::
 

a=True   #1
b=False  #0
print("a>b", a>b)
print("a<b", a<b)
print("a>=b", a>=b)
print("a<=b", a<=b)
print("a==b", a==b)


.................................................

Python Logical Operators
Logical operators are used to combine conditional statements:


and 	Returns True if both statements are true        x < 5 and  x < 10	
or	Returns True if one of the statements is true	x < 5 or x < 4	
not	Reverse the result, returns False if the result is true	not(x < 5 and x < 10)	


**Note::
0 means false
non-zero means true
empty string is false



a=50
b=30
c=40
if a>=b and a>=c:
    print ("true")
 
.................................................................................
Python Bitwise Operators
Bitwise operators are used to compare (binary) numbers:

Operator	Name			Description
& 		AND			Sets each bit to 1 	if both bits are 1|OR		Sets each bit to 1    if one of two bits is 1^XOR		Sets each bit to 1   if only one of two bits is 1~ NOT	Inverts all the bits
<<  Zero fill left shift	        Shift left by pushing zeros in from the right and let the leftmost bits fall off
>>   Signed right shift	Shift right by pushing copies of the leftmost bit in from the left, and let the rightmost bits fall off


...................................................................................
Python special Operators

1. Identity operators are used to compare the objects, not if they are equal, but if they are actually the same object, with the same memory location:

Operator		Description	                                  is 	   Returns true if both variables are the same object	    x is 								     y	
is not     Returns true if both variable are not the same object    x is 								    	    not y	


a=[1,3,5,90,10]
b=20
print( a is b)    #False
a=10
b=10
print(a is b)    #True


what is diffrence between == ans is
a is b      #refrence comparison/address comparison
a==b        # content comparison


2. Membership operator 

in
not in

list1=[1,2,3,4]
print (10 in list1)    #False
print (2 in list1)     #True
 
	
st=(" hello good evning")
print( 'h' in st)       #True


.....................................................
Python Assignment Operators-
..................................................
Assignment operators are used to assign values to variables:
  
x=10
a,b,c,d=10,20,30,40
print(a,b,c,d)


Operator Example	Same As	Try it
=	x = 5		x = 5	
+=	x += 3		x = x + 3	
-=	x -= 3		x = x - 3	
*=	x *= 3		x = x * 3	
/=	x /= 3		x = x / 3	
%=	x %= 3		x = x % 3	
//=	x //= 3		x = x // 3	
**=	x **= 3		x = x ** 3	
&=	x &= 3		x = x & 3	
|=	x |= 3		x = x | 3	
^=	x ^= 3		x = x ^ 3	
>>=	x >>= 3		x = x >> 3	
<<=	x <<= 3		x = x << ..................................................



Practise :::

1. what will be the output:   
   if a=30, b=20, c=10 , d=5
   ((a+b)*(c/d))
    ((a+b)*c/d)
   (a+(b*c)/d))
