_______________________________Modules____________________________

A module is a file containing Python definitions and statements. A module can define functions, classes and variables. A module can also include runnable code. Grouping related code into a module makes the code easier to understand and use.
__________________________________________________________________

How to create a module:
	def add():
	    a=20
	    b=30
 	    c=a+b
	    print(C)
save it as myModule1.py

So there is one module that is myModule1
 __________________________________________________________________
How to use a module:
	we can use module by import statement.
  __________________________________________________________________
The import statement: 

When interpreter encounters an import statement, it imports the module if the module is present in the search path. A search path is a list of directories that the interpreter searches for importing a module. 

For example, to import the module calc.py, we need to put the following command at the top of the script :

__________________________________________________________________
Accessing vriables in module:

	person1={"name":"john","age":32}
	person2={"name":"john","age":32}
save it as mymodule2.py

	import mymodule2
	a=mymodule2.person1("age")
	print(a)

  __________________________________________________________________
Naming a module:
	We can rename a module by using as keyword:
	
 	import mymodule2 as m
	a=mymodule2.person1("age")
	print(a)
  __________________________________________________________________
Built-in modules:

we can use the built-in modules for the python program:

	import platform
	x=platform.system()
	print(x)
__________________________________________________________________
create modules:

	def greeting(name):
		print("helloo",name)
	person1={"name":"john","age":32}

import modules:
	from mymodule1 from person1
	print(person1["age"])


	